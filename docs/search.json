[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mike Johnson. Author, maintainer. Justin Singh-Mohudpur. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Johnson M, Singh-Mohudpur J (2024). hfsubsetR: Hydrofabric Subsetter. R package version 0.3.2https://github.com/lynker-spatial/hfsubsetR, https://github.com/lynker-spatial/hfsubsetR.","code":"@Manual{,   title = {hfsubsetR: Hydrofabric Subsetter},   author = {Mike Johnson and Justin Singh-Mohudpur},   year = {2024},   note = {R package version 0.3.2https://github.com/lynker-spatial/hfsubsetR},   url = {https://github.com/lynker-spatial/hfsubsetR}, }"},{"path":"/index.html","id":"hfsubsetr","dir":"","previous_headings":"","what":"Hydrofabric Subsetter","title":"Hydrofabric Subsetter","text":"goal hfsubsetR extract hydrofabric subsets cloud local archives built lynker-spatial.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Hydrofabric Subsetter","text":"can install development version hfsubsetR GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"lynker-spatial/hfsubsetR\") library(hfsubsetR)"},{"path":[]},{"path":"/index.html","id":"from-local-file","dir":"","previous_headings":"Basic Use","what":"From local file","title":"Hydrofabric Subsetter","text":"can download version (default = ‘2.2’) hydrofabric (default = ‘nextgen’) domain (default = ‘conus’) using get_hydrofabric. , can extract data VPU: , can extract subset based input identifier (one id, comid, hl_uri, poi_id, nldi_feature, xy):","code":"gpkg <- '/Users/mikejohnson/hydrofabric/conus_nextgen.gpkg'  get_hydrofabric(outfile = gpkg) get_vpu_fabric(gpkg,                 vpuid = \"01\",                 outfile = '/Users/mikejohnson/hydrofabric/01_nextgen.gpkg') subset_fabric <- get_subset(gpkg = gpkg, comid = 101)"},{"path":"/index.html","id":"from-remote","dir":"","previous_headings":"Basic Use","what":"From Remote","title":"Hydrofabric Subsetter","text":"Coming soon…","code":""},{"path":"/index.html","id":"questions","dir":"","previous_headings":"Basic Use","what":"Questions?","title":"Hydrofabric Subsetter","text":"Please reach via issue PR comments, concerns, questions!","code":""},{"path":"/reference/OGRSQL.html","id":null,"dir":"Reference","previous_headings":"","what":"OGRSQL OGRSQL driver, use to [dbConnect()] to a data source readable by sf — OGRSQL","title":"OGRSQL OGRSQL driver, use to [dbConnect()] to a data source readable by sf — OGRSQL","text":"OGRSQL OGRSQL driver, use [dbConnect()] data source readable sf","code":""},{"path":"/reference/OGRSQL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OGRSQL OGRSQL driver, use to [dbConnect()] to a data source readable by sf — OGRSQL","text":"","code":"OGRSQL()"},{"path":"/reference/OGRSQLConnection-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class OGRSQLConnection (and methods) — OGRSQLConnection-class","title":"Class OGRSQLConnection (and methods) — OGRSQLConnection-class","text":"OGRSQLConnection objects created passing [OGRSQL()] first argument [DBI::dbConnect()]. superclass [DBIConnection-class] class.","code":""},{"path":"/reference/OGRSQLConnection-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class OGRSQLConnection (and methods) — OGRSQLConnection-class","text":"","code":"# S4 method for class 'OGRSQLConnection' show(object)  # S4 method for class 'OGRSQLConnection' dbSendQuery(conn, statement, ...)  # S4 method for class 'OGRSQLConnection,character' dbReadTable(conn, name, ...)  # S4 method for class 'OGRSQLConnection' dbListTables(conn, ...)  # S4 method for class 'OGRSQLConnection,ANY' dbExistsTable(conn, name, ...)  # S4 method for class 'OGRSQLConnection' dbDisconnect(conn, ...)"},{"path":"/reference/OGRSQLDriver-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class OGRSQLDriver — OGRSQLDriver-class","title":"Class OGRSQLDriver — OGRSQLDriver-class","text":"OGRSQLDriver objects created [OGRSQL()] used select correct method [dbConnect()]. superclass [DBIDriver-class] class, used purely dispatch.","code":""},{"path":"/reference/OGRSQLDriver-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class OGRSQLDriver — OGRSQLDriver-class","text":"","code":"# S4 method for class 'OGRSQLDriver,ANY' dbDataType(dbObj, obj, ...)  # S4 method for class 'OGRSQLDriver' dbIsValid(dbObj, ...)  # S4 method for class 'OGRSQLDriver' dbUnloadDriver(drv, ...)  # S4 method for class 'OGRSQLDriver' dbGetInfo(dbObj, ...)"},{"path":"/reference/OGRSQLResult-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class OGRSQLResult (and methods) — OGRSQLResult-class","title":"Class OGRSQLResult (and methods) — OGRSQLResult-class","text":"OGRSQLResult objects created [dbSendQuery()] [dbSendStatement()], encapsulate result SQL statement. superclass [DBIResult-class] class. \"Usage\" section lists class methods overridden lazsf.","code":""},{"path":"/reference/OGRSQLResult-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class OGRSQLResult (and methods) — OGRSQLResult-class","text":"","code":"# S4 method for class 'OGRSQLResult' show(object)  # S4 method for class 'OGRSQLResult' dbFetch(res, n = -1, ...)  # S4 method for class 'OGRSQLResult' dbClearResult(res, ...)  # S4 method for class 'OGRSQLResult' dbHasCompleted(res, ...)"},{"path":[]},{"path":"/reference/arrow_to_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Arrow Table to sf — arrow_to_sf","title":"Convert Arrow Table to sf — arrow_to_sf","text":"Helper function convert 'data.frame' sf","code":""},{"path":"/reference/arrow_to_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Arrow Table to sf — arrow_to_sf","text":"","code":"arrow_to_sf(tbl, metadata)"},{"path":"/reference/arrow_to_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Arrow Table to sf — arrow_to_sf","text":"tbl data.frame reading Arrow dataset metadata list validated geo metadata","code":""},{"path":"/reference/arrow_to_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Arrow Table to sf — arrow_to_sf","text":"object sf CRS geometry columns","code":""},{"path":"/reference/arrow_to_sf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Arrow Table to sf — arrow_to_sf","text":"Adopted wcjochem/sfarrow","code":""},{"path":"/reference/as_ogr.html","id":null,"dir":"Reference","previous_headings":"","what":"Delayed read for vector resources — as_ogr","title":"Delayed read for vector resources — as_ogr","text":"lazy data frame GDAL vector data sources. as_ogr DBI compatible designed work dplyr.","code":""},{"path":"/reference/as_ogr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delayed read for vector resources — as_ogr","text":"","code":"as_ogr(x, layer, ..., query = NA, ignore_lyrs = \"gpkg_|rtree_|sqlite_\")  # S3 method for class 'character' as_ogr(x, layer, ..., query = NA, ignore_lyrs = \"gpkg_|rtree_|sqlite_\")  # S3 method for class 'OGRSQLConnection' as_ogr(x, layer, ..., query = NA, ignore_lyrs = \"gpkg_|rtree_|sqlite_\")"},{"path":"/reference/as_ogr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delayed read for vector resources — as_ogr","text":"x data source (file path, url, database connection) layer layer name (varies driver, may file name without extension); case layer missing, st_read read first layer dsn, give warning (unless quiet = TRUE) print message multiple layers, give error layers dsn. dsn database connection, layer can table name database identifier (see Id). also possible omit layer rather use query argument. ... parameter(s) passed st_as_sf query SQL query pass directly ignore_lyrs pattern layers ignored description","code":""},{"path":"/reference/as_ogr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delayed read for vector resources — as_ogr","text":"'tbl_OGRSQLConnection'","code":""},{"path":"/reference/as_ogr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Delayed read for vector resources — as_ogr","text":"output `as_ogr()` 'tbl_OGRSQLConnection` extends `tbl_dbi` may used functions workflows normal DBI way, see [OGRSQL()] as_ogr DBI support. obtain memory data frame use explict `collect()` `st_as_sf()`. call `collect()` triggered `st_as_sf()` add sf class output.","code":""},{"path":"/reference/create_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Create standardized geo metadata for Parquet files — create_metadata","title":"Create standardized geo metadata for Parquet files — create_metadata","text":"Create standardized geo metadata Parquet files","code":""},{"path":"/reference/create_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create standardized geo metadata for Parquet files — create_metadata","text":"","code":"create_metadata(   df,   hf_version = \"2.2\",   license = \"ODbL\",   source = \"lynker-spatial\" )"},{"path":"/reference/create_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create standardized geo metadata for Parquet files — create_metadata","text":"df object class sf hf_version dataset version license dataset license source dataset source","code":""},{"path":"/reference/create_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create standardized geo metadata for Parquet files — create_metadata","text":"JSON formatted list geo-metadata","code":""},{"path":"/reference/create_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create standardized geo metadata for Parquet files — create_metadata","text":"Reference metadata standard:   https://github.com/geopandas/geo-arrow-spec. compatible   GeoPandas Parquet files. Adopted wcjochem/sfarrow","code":""},{"path":"/reference/dbConnect-OGRSQLDriver-method.html","id":null,"dir":"Reference","previous_headings":"","what":"dbConnect — dbConnect,OGRSQLDriver-method","title":"dbConnect — dbConnect,OGRSQLDriver-method","text":"dbConnect sources can read package sf","code":""},{"path":"/reference/dbConnect-OGRSQLDriver-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dbConnect — dbConnect,OGRSQLDriver-method","text":"","code":"# S4 method for class 'OGRSQLDriver' dbConnect(drv, DSN = \"\", readonly = TRUE, ...)"},{"path":"/reference/dbConnect-OGRSQLDriver-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dbConnect — dbConnect,OGRSQLDriver-method","text":"drv OGRSQLDriver created OGRSQL() DSN data source name readonly open readonly mode (`TRUE` option) ... ignored","code":""},{"path":"/reference/dbConnect-OGRSQLDriver-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dbConnect — dbConnect,OGRSQLDriver-method","text":"'OGRSQL' available documented GDAL: https://gdal.org/user/ogr_sql_dialect.html","code":""},{"path":"/reference/encode_wkb.html","id":null,"dir":"Reference","previous_headings":"","what":"Encode Well Known Binary — encode_wkb","title":"Encode Well Known Binary — encode_wkb","text":"Convert sfc geometry columns WKB binary format","code":""},{"path":"/reference/encode_wkb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encode Well Known Binary — encode_wkb","text":"","code":"encode_wkb(df)"},{"path":"/reference/encode_wkb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encode Well Known Binary — encode_wkb","text":"df sf object","code":""},{"path":"/reference/encode_wkb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encode Well Known Binary — encode_wkb","text":"data.frame binary geometry column(s)","code":""},{"path":"/reference/encode_wkb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Encode Well Known Binary — encode_wkb","text":"Allows one geometry column sfc format. Adopted wcjochem/sfarrow","code":""},{"path":"/reference/find_origin.html","id":null,"dir":"Reference","previous_headings":"","what":"Find an origin from indexed IDs — find_origin","title":"Find an origin from indexed IDs — find_origin","text":"Find origin indexed IDs","code":""},{"path":"/reference/find_origin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find an origin from indexed IDs — find_origin","text":"","code":"find_origin(   network,   id,   type = c(\"id\", \"comid\", \"hl_uri\", \"poi_id\", \"nldi_feature\", \"xy\") )"},{"path":"/reference/find_origin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find an origin from indexed IDs — find_origin","text":"network `dplyr`-compatible object. id queryable identifier type `type`. type index type describing `id`.","code":""},{"path":"/reference/find_origin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find an origin from indexed IDs — find_origin","text":"network origin. single origin found,          exception raised.","code":""},{"path":"/reference/find_origin_query.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 dispatch on query identifier type — find_origin_query","title":"S3 dispatch on query identifier type — find_origin_query","text":"S3 dispatch query identifier type","code":""},{"path":"/reference/find_origin_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 dispatch on query identifier type — find_origin_query","text":"","code":"find_origin_query(id, network)"},{"path":"/reference/find_origin_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 dispatch on query identifier type — find_origin_query","text":"id queryable identifier, see `find_origin`. network `dplyr`-compatible object.","code":""},{"path":"/reference/find_origin_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 dispatch on query identifier type — find_origin_query","text":"`network` applying [dplyr::filter] expression.","code":""},{"path":"/reference/get_hydrofabric.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a Hydrofabric Geopackage — get_hydrofabric","title":"Download a Hydrofabric Geopackage — get_hydrofabric","text":"Downloads hydrofabric Geopackage specified URL saves local file.","code":""},{"path":"/reference/get_hydrofabric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a Hydrofabric Geopackage — get_hydrofabric","text":"","code":"get_hydrofabric(   url = \"https://lynker-spatial.s3-us-west-2.amazonaws.com/hydrofabric\",   version = \"2.2\",   domain = \"conus\",   type = \"nextgen\",   outfile = NULL,   overwrite = FALSE )"},{"path":"/reference/get_hydrofabric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a Hydrofabric Geopackage — get_hydrofabric","text":"url character string specifying base URL hydrofabric repository. Defaults `'https://lynker-spatial.s3-us-west-2.amazonaws.com/hydrofabric'`. version character string indicating version hydrofabric download. Defaults `'2.2'`. domain character string specifying geographic domain hydrofabric. Defaults `'conus'`. type character string indicating type hydrofabric. Defaults `'nextgen'`. outfile character string specifying path save downloaded file. `NULL`, file saved. Defaults `NULL`. overwrite logical value indicating whether overwrite existing file. Defaults `FALSE`.","code":""},{"path":"/reference/get_hydrofabric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a Hydrofabric Geopackage — get_hydrofabric","text":"function returns path downloaded file (`outfile`).","code":""},{"path":"/reference/get_hydrofabric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a Hydrofabric Geopackage — get_hydrofabric","text":"","code":"if (FALSE) { # \\dontrun{ # Download the default hydrofabric file get_hydrofabric(outfile = \"conus_nextgen.gpkg\")  # Specify a different domain and version get_hydrofabric(   version = \"3.0\",   domain = \"hawaii\",   outfile = \"hawaii_nextgen.gpkg\",   overwrite = TRUE ) } # }"},{"path":"/reference/get_subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a hydrofabric subset — get_subset","title":"Build a hydrofabric subset — get_subset","text":"Build hydrofabric subset","code":""},{"path":"/reference/get_subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a hydrofabric subset — get_subset","text":"","code":"get_subset(   id = NULL,   comid = NULL,   hl_uri = NULL,   poi_id = NULL,   nldi_feature = NULL,   xy = NULL,   lyrs = c(\"divides\", \"flowpaths\", \"network\", \"nexus\"),   gpkg = NULL,   source = \"s3://lynker-spatial/hydrofabric\",   hf_version = \"2.2\",   type = \"nextgen\",   domain = \"conus\",   outfile = NULL,   overwrite = FALSE )"},{"path":"/reference/get_subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a hydrofabric subset — get_subset","text":"id hydrofabric id. datatype: string / vector strings e.g., 'wb-10026' c('wb-10026', 'wb-10355') comid NHDPlusV2 COMID. datatype: int / vector int e.g., 61297116 c(61297116 , 6129261) hl_uri hydrolocation URI. datatype: string / vector string / url e.g., HUC12-010100100101 c(HUC12-010100100101 , HUC12-010100110104) poi_id POI identifier. datatype: int / vector int e.g., 266387 c(266387, 266745) nldi_feature list names 'featureSource' 'featureID' 'featureSource' derived \"source\" column response dataRetrieval::get_nldi_sources() 'featureID' known identifier specified 'featureSource'. datatype: url e.g., 'https://labs.waterdata.usgs.gov/api/nldi/linked-data/census2020-nhdpv2' xy Location given vector XY EPSG:4326 (longitude, latitude, crs) lyrs layers extract gpkg local gpkg file source hydrofabric source (local root directory s3 link) hf_version hydrofabric version type hydrofabric type domain hydrofabric domain outfile gpkg file path provided, data written file. overwrite overwrite existing outfile file path. Default FALSE","code":""},{"path":"/reference/get_vpu_fabric.html","id":null,"dir":"Reference","previous_headings":"","what":"Get VPU Fabric — get_vpu_fabric","title":"Get VPU Fabric — get_vpu_fabric","text":"Retrieve Process Vector Processing Unit (VPU) Hydrofabric Layers function retrieves optionally filters spatial data layers GeoPackage (GPKG) based specified Vector Processing Unit ID (VPU ID). function can either return filtered layers list write output file.","code":""},{"path":"/reference/get_vpu_fabric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get VPU Fabric — get_vpu_fabric","text":"","code":"get_vpu_fabric(gpkg, vpuid = NULL, outfile = NULL)"},{"path":"/reference/get_vpu_fabric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get VPU Fabric — get_vpu_fabric","text":"gpkg string specifying path GeoPackage file. vpuid vector VPU IDs filter layers. `NULL`, filtering applied. Default `NULL`. outfile string specifying path write filtered layers new GeoPackage. `NULL`, layers returned list. Default `NULL`.","code":""},{"path":"/reference/get_vpu_fabric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get VPU Fabric — get_vpu_fabric","text":"`outfile` `NULL`, returns list element filtered spatial layer (`sf` object). `outfile` provided, returns path output GeoPackage.","code":""},{"path":"/reference/get_vpu_fabric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get VPU Fabric — get_vpu_fabric","text":"function reads layers provided GeoPackage, excluding \"error\" layer. layer, data optionally filtered provided `vpuid` processed `sf` objects. output file path provided, filtered layers written new GeoPackage. Otherwise, layers stored list returned.","code":""},{"path":"/reference/get_vpu_fabric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get VPU Fabric — get_vpu_fabric","text":"","code":"if (FALSE) { # \\dontrun{ # Example 1: Retrieve filtered layers as a list fabric <- get_vpu_fabric(\"path/to/geopackage.gpkg\", vpuid = c(\"01\", \"02\"))  # Example 2: Write filtered layers to a new GeoPackage get_vpu_fabric(\"path/to/geopackage.gpkg\", vpuid = c(\"01\", \"02\"), outfile = \"output.gpkg\") } # }"},{"path":"/reference/hfsubsetR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"hfsubsetR: Hydrofabric Subsetter — hfsubsetR-package","title":"hfsubsetR: Hydrofabric Subsetter — hfsubsetR-package","text":"Subset Hydrofabric Data R.","code":""},{"path":[]},{"path":"/reference/hfsubsetR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"hfsubsetR: Hydrofabric Subsetter — hfsubsetR-package","text":"Maintainer: Mike Johnson mike.johnson@noaa.gov Authors: Justin Singh-Mohudpur","code":""},{"path":"/reference/is_query_source.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is an hfsubset query source — is_query_source","title":"Check if an object is an hfsubset query source — is_query_source","text":"Check object hfsubset query source","code":""},{"path":"/reference/is_query_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is an hfsubset query source — is_query_source","text":"","code":"is_query_source(query_source)"},{"path":"/reference/is_query_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is an hfsubset query source — is_query_source","text":"query_source object","code":""},{"path":"/reference/is_query_source.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is an hfsubset query source — is_query_source","text":"TRUE `query_source` inherits 'hfsubset_query_source'.","code":""},{"path":"/reference/query.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a new hfsubset query — query","title":"Initialize a new hfsubset query — query","text":"Initialize new hfsubset query","code":""},{"path":"/reference/query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a new hfsubset query — query","text":"","code":"query()"},{"path":"/reference/query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a new hfsubset query — query","text":"`hfsubset_query` object","code":""},{"path":"/reference/query_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform data extraction from a query — query_extract","title":"Perform data extraction from a query — query_extract","text":"Perform data extraction query","code":""},{"path":"/reference/query_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform data extraction from a query — query_extract","text":"","code":"query_extract(query)"},{"path":"/reference/query_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform data extraction from a query — query_extract","text":"query `hfsubset_query` object","code":""},{"path":"/reference/query_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform data extraction from a query — query_extract","text":"list hydrofabric layers, path sink query","code":""},{"path":"/reference/query_extract.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Perform data extraction from a query — query_extract","text":"called query_subset().","code":""},{"path":"/reference/query_get_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessor to get the ID of a query — query_get_id","title":"Accessor to get the ID of a query — query_get_id","text":"Accessor get ID query","code":""},{"path":"/reference/query_get_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessor to get the ID of a query — query_get_id","text":"","code":"query_get_id(query)"},{"path":"/reference/query_get_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessor to get the ID of a query — query_get_id","text":"query `hfsubset_query` object","code":""},{"path":"/reference/query_get_layers.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessor to get the layers of a query — query_get_layers","title":"Accessor to get the layers of a query — query_get_layers","text":"Accessor get layers query","code":""},{"path":"/reference/query_get_layers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessor to get the layers of a query — query_get_layers","text":"","code":"query_get_layers(query)"},{"path":"/reference/query_get_layers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessor to get the layers of a query — query_get_layers","text":"query `hfsubset_query` object","code":""},{"path":"/reference/query_get_sink.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessor to get the sink of a query — query_get_sink","title":"Accessor to get the sink of a query — query_get_sink","text":"Accessor get sink query","code":""},{"path":"/reference/query_get_sink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessor to get the sink of a query — query_get_sink","text":"","code":"query_get_sink(query)"},{"path":"/reference/query_get_sink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessor to get the sink of a query — query_get_sink","text":"query `hfsubset_query` object","code":""},{"path":"/reference/query_get_source.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessor to get the source of a query — query_get_source","title":"Accessor to get the source of a query — query_get_source","text":"Accessor get source query","code":""},{"path":"/reference/query_get_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessor to get the source of a query — query_get_source","text":"","code":"query_get_source(query)"},{"path":"/reference/query_get_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessor to get the source of a query — query_get_source","text":"query `hfsubset_query` object","code":""},{"path":"/reference/query_set_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the identifier of a query — query_set_id","title":"Set the identifier of a query — query_set_id","text":"Set identifier query","code":""},{"path":"/reference/query_set_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the identifier of a query — query_set_id","text":"","code":"query_set_id(   query,   identifier,   type = c(\"id\", \"comid\", \"hl_uri\", \"poi_id\", \"nldi_feature\", \"xy\") )"},{"path":"/reference/query_set_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the identifier of a query — query_set_id","text":"query `hfsubset_query` object identifier Identifier value type Identifier type","code":""},{"path":"/reference/query_set_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the identifier of a query — query_set_id","text":"`query` identifier included","code":""},{"path":"/reference/query_set_layers.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the layers of a query — query_set_layers","title":"Set the layers of a query — query_set_layers","text":"Set layers query","code":""},{"path":"/reference/query_set_layers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the layers of a query — query_set_layers","text":"","code":"query_set_layers(query, layers)"},{"path":"/reference/query_set_layers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the layers of a query — query_set_layers","text":"query `hfsubset_query` object layers `character` vector layer names","code":""},{"path":"/reference/query_set_layers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the layers of a query — query_set_layers","text":"`query` layers included","code":""},{"path":"/reference/query_set_sink.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the sink of a query — query_set_sink","title":"Set the sink of a query — query_set_sink","text":"Set sink query","code":""},{"path":"/reference/query_set_sink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the sink of a query — query_set_sink","text":"","code":"query_set_sink(query, sink, overwrite = FALSE)"},{"path":"/reference/query_set_sink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the sink of a query — query_set_sink","text":"query `hfsubset_query` object sink character path sink overwrite TRUE, sink exists, overwritten","code":""},{"path":"/reference/query_set_sink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the sink of a query — query_set_sink","text":"`query` sink included","code":""},{"path":"/reference/query_set_source.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the source of a query — query_set_source","title":"Set the source of a query — query_set_source","text":"Set source query","code":""},{"path":"/reference/query_set_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the source of a query — query_set_source","text":"","code":"query_set_source(query, src)"},{"path":"/reference/query_set_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the source of a query — query_set_source","text":"query `hfsubset_query` object src `hfsubset_query_source` object","code":""},{"path":"/reference/query_set_source.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the source of a query — query_set_source","text":"`query` source included","code":""},{"path":[]},{"path":"/reference/query_source_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new `arrow` query source. — query_source_arrow","title":"Create a new `arrow` query source. — query_source_arrow","text":"Create new `arrow` query source.","code":""},{"path":"/reference/query_source_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new `arrow` query source. — query_source_arrow","text":"","code":"query_source_arrow(srcname, ...)"},{"path":"/reference/query_source_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new `arrow` query source. — query_source_arrow","text":"srcname URI `arrow`-compatible dataset ... Unused","code":""},{"path":"/reference/query_source_arrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new `arrow` query source. — query_source_arrow","text":"`hfsubset_query_source_arrow` object","code":""},{"path":"/reference/query_source_layer.html","id":null,"dir":"Reference","previous_headings":"","what":"Read/open a layer from a query source — query_source_layer","title":"Read/open a layer from a query source — query_source_layer","text":"Read/open layer query source","code":""},{"path":"/reference/query_source_layer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read/open a layer from a query source — query_source_layer","text":"","code":"query_source_layer(query_source, layer, ...)"},{"path":"/reference/query_source_layers.html","id":null,"dir":"Reference","previous_headings":"","what":"List out all available layers from a query source — query_source_layers","title":"List out all available layers from a query source — query_source_layers","text":"List available layers query source","code":""},{"path":"/reference/query_source_layers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List out all available layers from a query source — query_source_layers","text":"","code":"query_source_layers(query_source, ...)"},{"path":"/reference/query_source_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new `sf` query source. — query_source_sf","title":"Create a new `sf` query source. — query_source_sf","text":"Create new `sf` query source.","code":""},{"path":"/reference/query_source_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new `sf` query source. — query_source_sf","text":"","code":"query_source_sf(srcname, ...)"},{"path":"/reference/query_source_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new `sf` query source. — query_source_sf","text":"srcname Path VSI URI source ... Unused","code":""},{"path":"/reference/query_source_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new `sf` query source. — query_source_sf","text":"`hfsubset_query_source_sf` object","code":""},{"path":"/reference/query_subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a query subset — query_subset","title":"Execute a query subset — query_subset","text":"Execute query subset","code":""},{"path":"/reference/query_subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a query subset — query_subset","text":"","code":"query_subset(query)"},{"path":"/reference/query_subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a query subset — query_subset","text":"query `hfsubset_query` object","code":""},{"path":"/reference/query_subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a query subset — query_subset","text":"list hydrofabric layers, path sink query","code":""},{"path":"/reference/read_sf_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Parquet Dataset — read_sf_dataset","title":"Read Parquet Dataset — read_sf_dataset","text":"Read Arrow multi-file dataset create sf object","code":""},{"path":"/reference/read_sf_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Parquet Dataset — read_sf_dataset","text":"","code":"read_sf_dataset(dataset, find_geom = FALSE)"},{"path":"/reference/read_sf_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Parquet Dataset — read_sf_dataset","text":"dataset Dataset object created arrow::open_dataset arrow_dplyr_query find_geom logical. needed returning subset columns. available geometry columns selected added dataset query without named? Default FALSE require geometry column(s) selected specifically.","code":""},{"path":"/reference/read_sf_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Parquet Dataset — read_sf_dataset","text":"object class sf","code":""},{"path":"/reference/read_sf_dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Parquet Dataset — read_sf_dataset","text":"function primarily use opening dataset   arrow::open_dataset. Users can query arrow Dataset   using dplyr methods filter   select. Passing resulting query function   parse datasets create sf object. function   expects consistent geographic metadata stored dataset   order create sf objects.   Adopted wcjochem/sfarrow","code":""},{"path":[]},{"path":"/reference/st_as_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Force collection of a OGR query Convert as_ogr to a data frame or sf object — st_as_sf","title":"Force collection of a OGR query Convert as_ogr to a data frame or sf object — st_as_sf","text":"Force collection OGR query Convert as_ogr data frame sf object","code":""},{"path":"/reference/st_as_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Force collection of a OGR query Convert as_ogr to a data frame or sf object — st_as_sf","text":"","code":"# S3 method for class 'tbl_OGRSQLConnection' st_as_sf(x, ...)"},{"path":"/reference/st_as_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Force collection of a OGR query Convert as_ogr to a data frame or sf object — st_as_sf","text":"x output [as_ogr()] ... passed [collect()]","code":""},{"path":"/reference/st_as_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Force collection of a OGR query Convert as_ogr to a data frame or sf object — st_as_sf","text":"data frame `collect()`, sf data frame `st_as_sf()` (contains `sfc` geometry column)","code":""},{"path":"/reference/st_read_parquet.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Parquet file to sf object — st_read_parquet","title":"Read a Parquet file to sf object — st_read_parquet","text":"Read Parquet file. Uses standard metadata information   identify geometry columns coordinate reference system information.","code":""},{"path":"/reference/st_read_parquet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Parquet file to sf object — st_read_parquet","text":"","code":"st_read_parquet(dsn, col_select = NULL, props = NULL, ...)"},{"path":"/reference/st_read_parquet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Parquet file to sf object — st_read_parquet","text":"dsn character file path data source col_select character vector column names keep. Default NULL returns columns props Now deprecated read_parquet. ... additional parameters pass ParquetFileReader","code":""},{"path":"/reference/st_read_parquet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a Parquet file to sf object — st_read_parquet","text":"object class sf","code":""},{"path":"/reference/st_read_parquet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a Parquet file to sf object — st_read_parquet","text":"Reference metadata used:   https://github.com/geopandas/geo-arrow-spec.   standard Python GeoPandas library.   Adopted wcjochem/sfarrow","code":""},{"path":[]},{"path":"/reference/st_write_parquet.html","id":null,"dir":"Reference","previous_headings":"","what":"Write sf object to Parquet file — st_write_parquet","title":"Write sf object to Parquet file — st_write_parquet","text":"Convert simple features spatial object sf   Parquet file using write_parquet. Geometry   columns (type sfc) converted well-known binary (WKB) format.","code":""},{"path":"/reference/st_write_parquet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write sf object to Parquet file — st_write_parquet","text":"","code":"st_write_parquet(   obj,   dsn,   hf_version = \"2.2\",   license = \"ODbL\",   source = \"lynker-spatial\",   ... )"},{"path":"/reference/st_write_parquet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write sf object to Parquet file — st_write_parquet","text":"obj object class sf dsn data source name. path file name .parquet extension hf_version dataset version license dataset license source dataset source ... additional options pass write_parquet","code":""},{"path":"/reference/st_write_parquet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write sf object to Parquet file — st_write_parquet","text":"obj invisibly","code":""},{"path":"/reference/st_write_parquet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write sf object to Parquet file — st_write_parquet","text":"Adopted wcjochem/sfarrow","code":""},{"path":[]},{"path":"/reference/validate_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Metadata — validate_metadata","title":"Validate Metadata — validate_metadata","text":"Basic checking key geo metadata columns","code":""},{"path":"/reference/validate_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Metadata — validate_metadata","text":"","code":"validate_metadata(metadata)"},{"path":"/reference/validate_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Metadata — validate_metadata","text":"metadata list geo metadata","code":""},{"path":"/reference/validate_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Metadata — validate_metadata","text":"None. Throws error stops execution","code":""},{"path":"/reference/validate_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate Metadata — validate_metadata","text":"Adopted wcjochem/sfarrow","code":""},{"path":"/reference/write_sf_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Parquet Dataset — write_sf_dataset","title":"Write Parquet Dataset — write_sf_dataset","text":"Write sf object Arrow multi-file dataset","code":""},{"path":"/reference/write_sf_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Parquet Dataset — write_sf_dataset","text":"","code":"write_sf_dataset(   obj,   path,   format = \"parquet\",   partitioning = dplyr::group_vars(obj),   hf_version = \"2.2\",   license = \"ODbL\",   source = \"lynker-spatial\",   ... )"},{"path":"/reference/write_sf_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Parquet Dataset — write_sf_dataset","text":"obj object class sf path string path referencing directory output format output file format (\"parquet\" \"feather\") partitioning character vector columns obj grouping dplyr::group_vars hf_version dataset version license dataset license source dataset source ... additional arguments options passed arrow::write_dataset","code":""},{"path":"/reference/write_sf_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Parquet Dataset — write_sf_dataset","text":"obj invisibly","code":""},{"path":"/reference/write_sf_dataset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write Parquet Dataset — write_sf_dataset","text":"Translate sf spatial object data.frame WKB   geometry columns write arrow dataset   partitioning. Allows dplyr grouped datasets (using   group_by) uses variables define   partitions. Adopted wcjochem/sfarrow","code":""},{"path":[]}]
